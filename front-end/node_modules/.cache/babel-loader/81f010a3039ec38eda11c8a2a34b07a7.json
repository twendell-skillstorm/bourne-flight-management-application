{"ast":null,"code":"var _jsxFileName = \"/home/taylorwendell/Desktop/SkillStorm Training/bourne-flight-management-application/front-end/src/index.js\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById('root')); // Creates the reveal animation when scrolling\n\nfunction reveal() {\n  var reveals = document.querySelectorAll(\".reveal\");\n\n  for (var i = 0; i < reveals.length; i++) {\n    var windowHeight = window.innerHeight;\n    var elementTop = reveals[i].getBoundingClientRect().top;\n    var elementVisible = 150;\n\n    if (elementTop < windowHeight - elementVisible) {\n      reveals[i].classList.add(\"active\");\n    } else {\n      reveals[i].classList.remove(\"active\");\n    }\n  }\n}\n\nwindow.addEventListener(\"scroll\", reveal);\nroot.render( /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [\" \", /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this)]\n}, void 0, true));","map":{"version":3,"names":["React","ReactDOM","Provider","App","root","createRoot","document","getElementById","reveal","reveals","querySelectorAll","i","length","windowHeight","window","innerHeight","elementTop","getBoundingClientRect","top","elementVisible","classList","add","remove","addEventListener","render","store"],"sources":["/home/taylorwendell/Desktop/SkillStorm Training/bourne-flight-management-application/front-end/src/index.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { Provider } from 'react-redux';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\n// Creates the reveal animation when scrolling\nfunction reveal() {\n  var reveals = document.querySelectorAll(\".reveal\");\n\n  for (var i = 0; i < reveals.length; i++) {\n    var windowHeight = window.innerHeight;\n    var elementTop = reveals[i].getBoundingClientRect().top;\n    var elementVisible = 150;\n\n    if (elementTop < windowHeight - elementVisible) {\n      reveals[i].classList.add(\"active\");\n    } else {\n      reveals[i].classList.remove(\"active\");\n    }\n  }\n}\n\nwindow.addEventListener(\"scroll\", reveal);\n\n\nroot.render(\n  <> {/* This is a React Fragment. React components can only return one item, fragments bundle multiple into one item */} \n  {/* This is a JSX comment */}\n  {/* Provider is the Redux store, placing it here gives my entire application access to it */}\n    <Provider store={store}>\n        <App />\n    </Provider>\n  </>\n);"],"mappings":";AAAA,OAAO,sCAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;;;AAEA,MAAMC,IAAI,GAAGH,QAAQ,CAACI,UAAT,CAAoBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB,CAAb,C,CAEA;;AACA,SAASC,MAAT,GAAkB;EAChB,IAAIC,OAAO,GAAGH,QAAQ,CAACI,gBAAT,CAA0B,SAA1B,CAAd;;EAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,OAAO,CAACG,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;IACvC,IAAIE,YAAY,GAAGC,MAAM,CAACC,WAA1B;IACA,IAAIC,UAAU,GAAGP,OAAO,CAACE,CAAD,CAAP,CAAWM,qBAAX,GAAmCC,GAApD;IACA,IAAIC,cAAc,GAAG,GAArB;;IAEA,IAAIH,UAAU,GAAGH,YAAY,GAAGM,cAAhC,EAAgD;MAC9CV,OAAO,CAACE,CAAD,CAAP,CAAWS,SAAX,CAAqBC,GAArB,CAAyB,QAAzB;IACD,CAFD,MAEO;MACLZ,OAAO,CAACE,CAAD,CAAP,CAAWS,SAAX,CAAqBE,MAArB,CAA4B,QAA5B;IACD;EACF;AACF;;AAEDR,MAAM,CAACS,gBAAP,CAAwB,QAAxB,EAAkCf,MAAlC;AAGAJ,IAAI,CAACoB,MAAL,eACE;EAAA,6BAGE,QAAC,QAAD;IAAU,KAAK,EAAEC,KAAjB;IAAA,uBACI,QAAC,GAAD;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QAHF;AAAA,gBADF"},"metadata":{},"sourceType":"module"}