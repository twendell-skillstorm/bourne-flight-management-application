{"ast":null,"code":"const initialState = {\n  username: '',\n  friends: []\n}; // userReducer should return the new state for this reducer\n\nexport const userReducer = function () {\n  var _state$friends;\n\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'SET_USERNAME':\n      // payload is the data they're calling our reducer with\n      // { type: 'SET_USERNAME', payload: 'react_lover_123'}\n      console.log('SET_USERNAME');\n      return { ...state,\n        username: action.payload\n      };\n\n    case 'ADD_FRIEND':\n      // {type: 'ADD_FRIEND', payload: {firstName: 'Sally', 'lastName: 'Smith'}}\n      return { ...state,\n        friends: [...state.friends, action.payload]\n      };\n\n    case 'REMOVE_FRIEND':\n      // Remove any person from the friend's list whose first name matches the action payload's firstname\n      return { ...state,\n        friends: (_state$friends = state.friends) === null || _state$friends === void 0 ? void 0 : _state$friends.filter(friend => friend !== action.payload)\n      };\n\n    default:\n      return state;\n    // Returns the previous state. AKA make no changes\n  }\n};","map":{"version":3,"names":["initialState","username","friends","userReducer","state","action","type","console","log","payload","filter","friend"],"sources":["/home/taylorwendell/Desktop/SkillStorm Training/bourne-flight-management-application/front-end/src/Reducers/userReducer.js"],"sourcesContent":["const initialState = {\n    username: '',\n    friends: []\n};\n\n// userReducer should return the new state for this reducer\nexport const userReducer = (state=initialState, action) => {\n    switch(action.type) {\n        case 'SET_USERNAME':\n            // payload is the data they're calling our reducer with\n            // { type: 'SET_USERNAME', payload: 'react_lover_123'}\n            console.log('SET_USERNAME');\n            return {...state, username: action.payload};\n        case 'ADD_FRIEND':\n            // {type: 'ADD_FRIEND', payload: {firstName: 'Sally', 'lastName: 'Smith'}}\n            return {...state, friends: [...state.friends, action.payload]};\n        case 'REMOVE_FRIEND':\n            // Remove any person from the friend's list whose first name matches the action payload's firstname\n            return { ...state, friends: state.friends?.filter(friend => friend !== action.payload)};\n        default:\n            return state; // Returns the previous state. AKA make no changes\n    }\n}\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG;EACjBC,QAAQ,EAAE,EADO;EAEjBC,OAAO,EAAE;AAFQ,CAArB,C,CAKA;;AACA,OAAO,MAAMC,WAAW,GAAG,YAAgC;EAAA;;EAAA,IAA/BC,KAA+B,uEAAzBJ,YAAyB;EAAA,IAAXK,MAAW;;EACvD,QAAOA,MAAM,CAACC,IAAd;IACI,KAAK,cAAL;MACI;MACA;MACAC,OAAO,CAACC,GAAR,CAAY,cAAZ;MACA,OAAO,EAAC,GAAGJ,KAAJ;QAAWH,QAAQ,EAAEI,MAAM,CAACI;MAA5B,CAAP;;IACJ,KAAK,YAAL;MACI;MACA,OAAO,EAAC,GAAGL,KAAJ;QAAWF,OAAO,EAAE,CAAC,GAAGE,KAAK,CAACF,OAAV,EAAmBG,MAAM,CAACI,OAA1B;MAApB,CAAP;;IACJ,KAAK,eAAL;MACI;MACA,OAAO,EAAE,GAAGL,KAAL;QAAYF,OAAO,oBAAEE,KAAK,CAACF,OAAR,mDAAE,eAAeQ,MAAf,CAAsBC,MAAM,IAAIA,MAAM,KAAKN,MAAM,CAACI,OAAlD;MAArB,CAAP;;IACJ;MACI,OAAOL,KAAP;IAAc;EAbtB;AAeH,CAhBM"},"metadata":{},"sourceType":"module"}